library(arules)
TR<-read.transactions(GroceryStoreDataSet.csv, format = "basket",
header = FALSE, sep = ","
, rm.duplicates = FALSE,
quote = "\"'", skip = 0,
encoding = "unknown")
getwd()
|
TR<-read.transactions(GroceryStoreDataSet.csv, format = "basket",
header = FALSE, sep = ","
, rm.duplicates = FALSE,
quote = "\"'", skip = 0,
encoding = "unknown")
|
TR<-read.transactions("GroceryStoreDataSet.csv", format = "basket",
header = FALSE, sep = ","
, rm.duplicates = FALSE,
quote = "\"'", skip = 0,
encoding = "unknown")
itemFrequencyPlot(TR, topN=5)
, rm.duplicates = FALSE,
quote = "\n"'", skip = 0,
encoding = "unknown")
itemFrequencyPlot(TR, topN=5)
|
TR<-read.transactions("notepad.txt", format = "basket",
header = FALSE, sep = ","
, rm.duplicates = FALSE,
quote = "\"'", skip = 0,
encoding = "unknown")
TR<-read.transactions("notepad.txt", format = "basket",
header = FALSE, sep = ","
, rm.duplicates = FALSE,
quote = "\"'", skip = 0,
encoding = "unknown")
TR<-read.transactions("notepad.txt", format = "basket",
header = FALSE, sep = ","
, rm.duplicates = FALSE,
quote = "\"'", skip = 0,
encoding = "unknown")
itemFrequencyPlot(TR, topN=5)
itemFrequencyPlot(TR, type = c("relative", "absolute"),
weighted = FALSE)
itemFrequencyPlot(TR, type = c("relative", "absolute"),
weighted = FALSE, topN=5, ylabel="Items mas frecuentes")
itemFrequencyPlot(TR, type = c("relative", "absolute"),
weighted = FALSE, topN=5, ylab="Items mas frecuentes")
itemFrequencyPlot(TR, type = c("relative", "absolute"),
weighted = FALSE, topN=5, ylab="Items más frecuentes")
itemFrequencyPlot(TR, type = c("relative", "absolute"),
weighted = FALSE, topN=5, ylab="Items más frecuentes")
rules <- apriori(TR, parameter = list(supp = 0.5, conf = 0.7, target = "rules"))
inspect(rules)
summary(rules)
rules <- apriori(TR, parameter = list(supp =0.1, conf=0.7, target = "rules"))
inspect(rules)
rules->sort(rules, by-support);
rules->sort(rules, by-"support", decreasing=TRUE)
rules->sort(rules, by-"support", decreasing=TRUE)
rules->sort(rules, by-"support", decreasing=TRUE)
rules->sort(rules, by-"support", decreasing=TRUE)
rules<-sort(rules, by-"support", decreasing= TRUE)
Tr2<- read.transactions("BreakBasket_DMS.csv", format="single", cols=c(3,4), sep=",", rm.duplicates=TRUE)
itemFrequencyPlot(Tr2, topN= 10)
Tr2<- read.transactions("BreakBasket_DMS.csv", format="single", cols=c(3,4), sep=",", rm.duplicates=TRUE)
itemFrequencyPlot(Tr2, topN= 10)
Tr2<-read.transactions("BreakBasket_DMS.csv", format="single", cols=c(3,4), sep=",", rm.duplicates=TRUE)
itemFrequencyPlot(Tr2, topN= 10)
install.packages("xtable")
library(xtable)
1+1
getwd()
setwd("~/")
setwd("I:/ULASALLE/Mineria_de_datos/R_practicas")
getwd()
